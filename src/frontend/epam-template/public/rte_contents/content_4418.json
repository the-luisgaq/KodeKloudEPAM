{"content":"\"{\\\"object\\\":\\\"value\\\",\\\"document\\\":{\\\"object\\\":\\\"document\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-1\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Node.js\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-3\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Code quality gates\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Lint. A linter should be added to project, we suggest using\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.npmjs.com/package/eslint\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"eslint\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"and\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.npmjs.com/package/eslint-config-airbnb\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"arirbnb\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"rule set.\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Unit tests. Unit tests is a must,\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"code coverage should be >= 80%\\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\". For writing unit tests you could use any library, which fits your needs, we suggest using\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.npmjs.com/package/jest\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"jest\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"or \\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.npmjs.com/package/mocha\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"mocha\\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"+\\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.npmjs.com/package/sinon\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"sinon\\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"+\\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.npmjs.com/package/chai\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"chai\\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\". For code coverage you could use\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.npmjs.com/package/nyc\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"nyc\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\".\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"You could run above mentioned things on each commit using git-hooks, to make every commit buildable, usable. In Node.js, we suggest using\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.npmjs.com/package/husky\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"husky\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"for it.\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Code review. Code review is mandatory. Before code review, all previous quality rules should be met: code review starts only after merge-request pipeline succeeds.\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"A project mush have integration and/or e2e tests.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Whether you should have e2e tests or not is defined by possibility of using services your app is dependent on for testing. For many services in TKM there're dev and qa environments which could be used for such testing.\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"End-to-end and integration tests should be written using\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://cucumber.io/docs/gherkin/reference/\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Gherkin\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"syntax with Cucumber (Java) or CucumberJs frameworks. E2e/integration tests should be part of CI pipeline.\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"E2e/integration tests are usually written by developers, not special QA people - be prepared to writhe either complete test suites or at least separate steps of Gherkin scenarios.\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://git.tmaws.io/tmol-fraud-monitoring/nudata-collector/blob/master-production/features/status.feature\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"An example of e2e tests\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"- it may be not the best e2e tests in TKM, but these are the ones that I know about ('cause our team wrote them).\\\",\\\"marks\\\":[]}]}]}]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-3\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Release strategy\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"You could use whatever git branching strategy fits your project needs.\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Would be great, if you automate release process as a job inside pipeline. For auto-generated release notes, creating git-tags etc, you could use \\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.npmjs.com/package/semantic-release\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"semantic-release\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\".\\\",\\\"marks\\\":[]}]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-3\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Microservice how-to\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Use docker images\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Docker images should be built on CI agent, then agent (only agent) has permission to push your built image to\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://contegixapp1.livenation.com/confluence/display/AWS/EC2+Container+Registry+aka+Docker+Registry\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"ECR\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\".\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"To pull a built image to your local machine you could use\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://contegixapp1.livenation.com/confluence/display/AWS/TMHub+-+A+Docker+ECR+Proxy\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"ECR proxy\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\".\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Use core os as EC2 AMI\\\",\\\"marks\\\":[]}]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"For reference you could use this\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://git.tmaws.io/jem/terraform-scaling-sandbox\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"repo\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\". \\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-3\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Serverless how-to\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"There're lots of projects in TKM which use Serverless approach: AWS Lambda and other co-existent AWS and onPrem services.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Use\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://contegixapp1.livenation.com/confluence/display/AWS/Terraformer+101\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"TerraformER\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"for all deployments. Some projects use\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://serverless.com/framework/docs/\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Serverless Framework\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"or pure Cloud Formation rather than Terraform for variety of reasons, but TerraformER is a default way to go.\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"In many cases there's no explicit DevOps role to work on deployment scripts. Please be prepared to write deployment scripts yourself - this is an opportunity to gain new skills!\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"All sensitive data must be encrypted. Stateful services use\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://contegixapp1.livenation.com/confluence/display/AWS/Jana\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Jana\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"for storing such data, but this tool is not available for AWS Lambda, AWS KMS service is used for storing encrypted data for Lambda. To encrypt data for prod account you should file a support request via\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://jira.livenation.com/servicedesk/customer/portal/149\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"TechOps Service Desk\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\".\\\",\\\"marks\\\":[]}]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-3\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Logging, Monitoring, and Alerting\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Logging\\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-bold\\\",\\\"data\\\":{}}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Microservice - Monitoring, and logging tools should be attached to your microservice. (\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://github.com/prometheus/node_exporter\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"node-exporter\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\",\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://www.fluentd.org/\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"fluent\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" etc) \\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"AWS Lambda - AWS gives you Cloud Watch logs out of the box which is great, but for passing the project into the support phase it is desirable to have logs in Kibana.\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"http://verifiedfan.git.tmaws.io/docs/architecture/logs.html\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"The \\\\\\\"Verified Fan\\\\\\\" project\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"has an example of such logging, you can also consider\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://docs.aws.amazon.com/solutions/latest/centralized-logging/architecture.html\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"the reference architecture from AWS\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\".\\\",\\\"marks\\\":[]}]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Monitoring\\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-bold\\\",\\\"data\\\":{}}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Grafana is a default way to go with monitoring. You can find lots of examples in\\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" \\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-span-mark\\\",\\\"data\\\":{\\\"style\\\":{}}}]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"https://grafana.tmaws.io/\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"TKM Grafana\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\". There's a variety of datasources already available there: \\\",\\\"marks\\\":[]}]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"image\\\",\\\"data\\\":{\\\"src\\\":\\\"https://onboarding.epam.com/app/cdn/5a537fb5-f6fb-44c6-8c75-6f3563952ede/image2019-9-18_13-39-25.png\\\",\\\"imageSize\\\":{\\\"width\\\":318,\\\"height\\\":185}},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Alerting\\\",\\\"marks\\\":[{\\\"object\\\":\\\"mark\\\",\\\"type\\\":\\\"uui-richTextEditor-bold\\\",\\\"data\\\":{}}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Don't forget about \\\",\\\"marks\\\":[]},{\\\"object\\\":\\\"inline\\\",\\\"type\\\":\\\"link\\\",\\\"data\\\":{\\\"url\\\":\\\"http://kb.epam.com/display/TKMADM/Ticketmaster+Tech+Maturity+with+checklist\\\"},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Ticketmaster Tech Maturity with checklist\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\". \\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\\n\\\\n\\\",\\\"marks\\\":[]}]}]}}\""}