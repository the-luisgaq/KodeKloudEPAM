[
  {
    "data": {},
    "type": "uui-richTextEditor-header-3",
    "children": [
      {
        "text": "Introduction"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "A lot of UI/UX elements displays list and hierarchical data. For example, tables, selects, catalogs, etc.  A lot of effort is required to solve problems of retrieving / grouping / filtering / sorting / visualizing such data. Everything becomes even more complex when it is necessary to implement the pattern of data lazy-loading, add some folding logic, different strategies for selecting elements with children nodes, etc."
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "To solve these and other problems "
      },
      {
        "text": "DataSources",
        "uui-richTextEditor-code": true
      },
      {
        "text": " were developed. They are black boxes encapsulating complex solutions to various issues with list/hierarchical data, providing simple abstraction."
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "Problems ",
        "uui-richTextEditor-bold": true
      },
      {
        "text": "DataSources",
        "uui-richTextEditor-code": true
      },
      {
        "text": " are solving:",
        "uui-richTextEditor-bold": true
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "converting data to renderable rows with multiple handlers (folding, selecting, focusing, clicking) based on the configuration;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "providing the abstraction over data fetching strategy; it doesn't matter if "
              },
              {
                "text": "DataSource",
                "uui-richTextEditor-code": true
              },
              {
                "text": " is fetching data from an array, some endpoint, or partially loading large amounts of records;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "implementing various selecting records strategies, such as picking a record only or with its children implicitly or explicitly;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "configuring rows options, like selection, DnD, etc.;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "enabling the possibility to filter/search over data, and sort data, no matter which fetching strategy is provided;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "rendering data rows partially, which makes it possible to render only a part of a large number of records at a time."
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "data": {},
    "type": "uui-richTextEditor-header-3",
    "children": [
      {
        "text": "How does it work?"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "While explaining this part of the "
      },
      {
        "text": "DataSources",
        "uui-richTextEditor-code": true
      },
      {
        "text": " concept, it is necessary to keep the right level of abstraction. Instead of digging into the realization details, let us observe ways "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " can be controlled by input."
      }
    ]
  },
  {
    "data": {
      "src": "http://static.cdn.epam.com/uploads/4677cc268a04664255f99b470b345dca/dataSources scheme.png",
      "imageSize": {
        "width": 933,
        "height": 261
      }
    },
    "type": "image",
    "url": "http://static.cdn.epam.com/uploads/4677cc268a04664255f99b470b345dca/dataSources scheme.png",
    "children": [
      {
        "text": ""
      }
    ],
    "width": 933
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": ""
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " input can be split into two groups of params, "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " props (static one, provided at creation time) and "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " state (dynamic one, which can be changed according to user actions)."
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": ""
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "DataSourceProps",
        "uui-richTextEditor-code": true
      },
      {
        "text": " contains info on how to work with data:",
        "uui-richTextEditor-bold": true
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "some info on the data displayed, e.g. how to get the id of an item;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "how to retrieve data;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "how to filter/sort/search over data, according to current "
              },
              {
                "text": "DataSource",
                "uui-richTextEditor-code": true
              },
              {
                "text": " state;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "rows options, e.g. whether a particular row can be selected, checked, or folded;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "configuration of selection, such as select selection cascading strategies."
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": ""
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " state contains the current state of the displayed data:",
        "uui-richTextEditor-bold": true
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "range of records to be displayed from some position;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "an index to be scrolled to;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "an index of a focused row;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "a search string;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "specified filter value;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "sorting configuration;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "selected rows ids;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "folded rows ids;"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "current page and page size."
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " state is usually held in the component's state. Changing the "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " state causes a change of rows, which are displayed (returned by "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": "). "
      }
    ]
  },
  {
    "data": {},
    "type": "uui-richTextEditor-header-3",
    "children": [
      {
        "text": "Views"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "DataSources",
        "uui-richTextEditor-code": true
      },
      {
        "text": " don't produce rows themselves, and they don't contain any information about the state of rows. They return views, which contain that information. Think about "
      },
      {
        "text": "Views",
        "uui-richTextEditor-code": true
      },
      {
        "text": " as about factories of rows. Each "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " can return multiple "
      },
      {
        "text": "Views",
        "uui-richTextEditor-code": true
      },
      {
        "text": ". This is done to support cases when a single "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " is used by multiple components."
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "Each component has to create its own view, and each "
      },
      {
        "text": "View",
        "uui-richTextEditor-code": true
      },
      {
        "text": " has to have its own "
      },
      {
        "text": "DataSourceState",
        "uui-richTextEditor-code": true
      },
      {
        "text": " instance and its change handler. To create a "
      },
      {
        "text": "View",
        "uui-richTextEditor-code": true
      },
      {
        "text": ", call the "
      },
      {
        "text": "useView",
        "uui-richTextEditor-code": true
      },
      {
        "text": " function of the "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " instance. You can see how "
      },
      {
        "text": "Views",
        "uui-richTextEditor-code": true
      },
      {
        "text": " can be created within "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " in the "
      },
      {
        "type": "link",
        "url": "/documents?id=dataSources-usage&mode=doc&skin=UUI4_promo&category=dataSources",
        "target": "_blank",
        "children": [
          {
            "text": "Usage In Components"
          }
        ]
      },
      {
        "text": " article."
      }
    ]
  },
  {
    "data": {},
    "type": "uui-richTextEditor-header-3",
    "children": [
      {
        "text": "Types of DataSources"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "Depending on the task, it is necessary to use different "
      },
      {
        "text": "DataSources",
        "uui-richTextEditor-code": true
      },
      {
        "text": ":"
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "ArrayDataSource",
                "uui-richTextEditor-code": true
              },
              {
                "text": " is used when it is required to render in-memory data. You can read more about "
              },
              {
                "text": "ArrayDataSource",
                "uui-richTextEditor-code": true
              },
              {
                "text": " "
              },
              {
                "data": {
                  "url": "/documents?id=dataSources-array-dataSource&mode=doc&skin=UUI4_promo&category=dataSources"
                },
                "type": "link",
                "url": "/documents?id=dataSources-array-dataSource&mode=doc&skin=UUI4_promo&category=dataSources",
                "children": [
                  {
                    "text": "in this article"
                  }
                ]
              },
              {
                "text": "."
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "AsyncDataSource",
                "uui-richTextEditor-code": true
              },
              {
                "text": " is used when data is located at some endpoint, but its amount is not too large; all the operations, like sorting/filtering/searching, are performed on the client side. You can read more about "
              },
              {
                "text": "AsyncDataSource",
                "uui-richTextEditor-code": true
              },
              {
                "text": " "
              },
              {
                "data": {
                  "url": "http://localhost:3000/documents?id=dataSources-async-dataSource&mode=doc&skin=UUI4_promo&category=dataSources"
                },
                "type": "link",
                "url": "http://localhost:3000/documents?id=dataSources-async-dataSource&mode=doc&skin=UUI4_promo&category=dataSources",
                "children": [
                  {
                    "text": ""
                  }
                ]
              },
              {
                "text": ""
              },
              {
                "data": {
                  "url": "/documents?id=dataSources-async-dataSource&mode=doc&skin=UUI4_promo&category=dataSources"
                },
                "type": "link",
                "url": "/documents?id=dataSources-async-dataSource&mode=doc&skin=UUI4_promo&category=dataSources",
                "children": [
                  {
                    "text": "in this article"
                  }
                ]
              },
              {
                "text": "."
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "LazyDataSource",
                "uui-richTextEditor-code": true
              },
              {
                "text": " is used to represent a large amount of data, stored at some endpoint; data is loading lazily, such operations as sorting/filtering/searching are performed on the server side. You can read more about "
              },
              {
                "text": "LazyDataSource",
                "uui-richTextEditor-code": true
              },
              {
                "text": " "
              },
              {
                "data": {
                  "url": "/documents?id=dataSources-lazy-dataSource&mode=doc&skin=UUI4_promo&category=dataSources"
                },
                "type": "link",
                "url": "/documents?id=dataSources-lazy-dataSource&mode=doc&skin=UUI4_promo&category=dataSources",
                "children": [
                  {
                    "text": "in this article"
                  }
                ]
              },
              {
                "text": "."
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "Each "
      },
      {
        "text": "DataSource",
        "uui-richTextEditor-code": true
      },
      {
        "text": " accepts "
      },
      {
        "text": "DataSourceProps",
        "uui-richTextEditor-code": true
      },
      {
        "text": " and "
      },
      {
        "text": "DataSourceState",
        "uui-richTextEditor-code": true
      },
      {
        "text": " in addition to its own specific props. You can read more about "
      },
      {
        "text": "DataSourceProps",
        "uui-richTextEditor-code": true
      },
      {
        "text": " "
      },
      {
        "data": {
          "url": "/documents?id=dataSources-base-props&mode=doc&skin=UUI4_promo&category=dataSources"
        },
        "type": "link",
        "url": "/documents?id=dataSources-base-props&mode=doc&skin=UUI4_promo&category=dataSources",
        "children": [
          {
            "text": "in this article"
          }
        ]
      },
      {
        "text": " and about "
      },
      {
        "text": "DataSourceState",
        "uui-richTextEditor-code": true
      },
      {
        "text": " "
      },
      {
        "data": {
          "url": "/documents?id=dataSources-dataSource-state&mode=doc&skin=UUI4_promo&category=dataSources"
        },
        "type": "link",
        "url": "/documents?id=dataSources-dataSource-state&mode=doc&skin=UUI4_promo&category=dataSources",
        "children": [
          {
            "text": "in this one"
          }
        ]
      },
      {
        "text": "."
      }
    ]
  },
  {
    "data": {},
    "type": "uui-richTextEditor-header-3",
    "children": [
      {
        "text": "Usage in other UUI components"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "DataSources are used in "
      },
      {
        "text": "Pickers",
        "uui-richTextEditor-code": true
      },
      {
        "text": " and "
      },
      {
        "text": "Datatables",
        "uui-richTextEditor-code": true
      },
      {
        "text": " UUI components. See usage in the further articles:"
      },
      {
        "data": {
          "url": "/documents?id=pickerInput&mode=doc&skin=UUI4_promo&category=components"
        },
        "type": "link",
        "url": "/documents?id=pickerInput&mode=doc&skin=UUI4_promo&category=components",
        "children": [
          {
            "text": ""
          }
        ]
      },
      {
        "text": ""
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": ""
              },
              {
                "data": {
                  "url": "/documents?id=pickerInput&mode=doc&skin=UUI4_promo&category=components"
                },
                "type": "link",
                "url": "/documents?id=pickerInput&mode=doc&skin=UUI4_promo&category=components",
                "children": [
                  {
                    "text": "PickerInput"
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": ""
              },
              {
                "data": {
                  "url": "/documents?id=PickerList&mode=doc&skin=UUI4_promo&category=components"
                },
                "type": "link",
                "url": "/documents?id=PickerList&mode=doc&skin=UUI4_promo&category=components",
                "children": [
                  {
                    "text": "PickerList"
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": ""
              },
              {
                "data": {
                  "url": "/documents?id=pickerModal&mode=doc&skin=UUI4_promo&category=components"
                },
                "type": "link",
                "url": "/documents?id=pickerModal&mode=doc&skin=UUI4_promo&category=components",
                "children": [
                  {
                    "text": "PickerModal"
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": ""
              },
              {
                "data": {
                  "url": "/demo?id=table"
                },
                "type": "link",
                "url": "/demo?id=table",
                "children": [
                  {
                    "text": "Table"
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": ""
              },
              {
                "data": {
                  "url": "/demo?id=filteredTable&page=1&pageSize=40&presetId=-1"
                },
                "type": "link",
                "url": "/demo?id=filteredTable&page=1&pageSize=40&presetId=-1",
                "children": [
                  {
                    "text": "FilteredTable"
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          }
        ]
      }
    ]
  }
]