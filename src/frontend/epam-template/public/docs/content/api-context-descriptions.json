[
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "ApiContext, along with the ErrorHandler component, provides a solution to deal with various errors which can be occurred during API calls. The following cases are handled:"
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "403, 404, 500, or other error status is returned from the server. ErrorContext replaces their children with an appropriate error screen"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "JavaScript errors in React components lifecycle (using"
              },
              {
                "text": " ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "data": {
                  "url": "https://reactjs.org/docs/react-component.html#componentdidcatch"
                },
                "type": "link",
                "url": "https://reactjs.org/docs/react-component.html#componentdidcatch",
                "children": [
                  {
                    "text": "onComponentDidCatch"
                  }
                ]
              },
              {
                "text": " ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "text": "API)"
              }
            ]
          }
        ]
      },
      {
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "Network failures and Authentication lost scenario"
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "In all cases, an error is logged via AnalyticsContext."
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "Errors are discarded on navigation (e.g., clicking a main menu item), and all pending API calls are canceled. Also, we close all modal windows on any JS/API error. "
      }
    ]
  },
  {
    "data": {},
    "type": "note-error",
    "children": [
      {
        "text": "Please note that you need to wrap your application with the UUI "
      },
      {
        "data": {
          "url": "/documents?category=contexts&id=contextProvider&mode=doc&skin=UUI4_promo"
        },
        "type": "link",
        "url": "/documents?category=contexts&id=contextProvider&mode=doc&skin=UUI4_promo",
        "children": [
          {
            "text": "ContextProvider"
          }
        ]
      },
      {
        "text": " in order to use the API context. \n\nAdditionally, for error handling, you need to wrap your app with the "
      },
      {
        "text": "ErrorHandler",
        "uui-richTextEditor-code": true
      },
      {
        "text": " component. This component subscribes to the reported errors and replaces "
      },
      {
        "text": "ErrorHandler",
        "uui-richTextEditor-code": true
      },
      {
        "text": " children with appropriate error screen or starts the recovery process depending on the error type."
      }
    ]
  }
]