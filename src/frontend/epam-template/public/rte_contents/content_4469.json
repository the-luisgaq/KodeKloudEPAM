{"content":"\"{\\\"object\\\":\\\"value\\\",\\\"document\\\":{\\\"object\\\":\\\"document\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"image\\\",\\\"data\\\":{\\\"src\\\":\\\"https://onboarding.epam.com/app/cdn/b956b8ad-9555-4bf0-bb26-7f0bfda45db4/image2019-12-10_16-0-13.png\\\",\\\"imageSize\\\":{\\\"width\\\":746,\\\"height\\\":77}},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Validation testing occurs among the final steps and plays an essential role in the development process. It verifies the aspects of product, behavior, and efficiency. In other words, validation testing can be seen as an assurance of the correct development.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"image\\\",\\\"data\\\":{\\\"src\\\":\\\"https://onboarding.epam.com/app/cdn/1c4fc16a-7b1d-421c-860f-987f7a480dac/image2019-12-10_16-1-23.png\\\",\\\"imageSize\\\":{\\\"width\\\":745,\\\"height\\\":74}},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"UI testing is defined as a test of the user interface for the API and other integral parts. UI testing focuses more on the interface which ties into the API rather than the API testing itself. Although UI testing is not a specific test of API in terms of codebase, this technique still provides an overview of the health, usability, and efficiency of the app's front and back ends.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"image\\\",\\\"data\\\":{\\\"src\\\":\\\"https://onboarding.epam.com/app/cdn/c8364a9d-c9ba-48c2-be4c-35f049b4b634/image2019-12-10_16-15-6.png\\\",\\\"imageSize\\\":{\\\"width\\\":744,\\\"height\\\":75}},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Load testing generally occurs after a specific unit or the whole codebase has been completed. This technique checks if the theoretical solutions work as planned. Load testing monitors the app's performance at both normal and peak conditions.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"image\\\",\\\"data\\\":{\\\"src\\\":\\\"https://onboarding.epam.com/app/cdn/b0cd04ee-dec5-459a-ba72-f541879a80e8/image2019-12-10_16-6-34.png\\\",\\\"imageSize\\\":{\\\"width\\\":746,\\\"height\\\":75}},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Penetration testing is considered the second test in the auditing process. In this type, users with limited API knowledge will try to assess the threat vector from an outside perspective, which is about functions, resources, processes, or aim to the entire API and its components.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"image\\\",\\\"data\\\":{\\\"src\\\":\\\"https://onboarding.epam.com/app/cdn/dff27da2-8376-41a1-82b8-42df1202dc03/image2019-12-10_16-8-7.png\\\",\\\"imageSize\\\":{\\\"width\\\":745,\\\"height\\\":76}},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Includes testing particular functions in the codebase. These features are the representation of specific scenarios to make sure the API functions are handled well within the planned parameters.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"image\\\",\\\"data\\\":{\\\"src\\\":\\\"https://onboarding.epam.com/app/cdn/24633727-4abb-48d5-bb97-37699eb06b42/image2019-12-10_16-8-38.png\\\",\\\"imageSize\\\":{\\\"width\\\":746,\\\"height\\\":75}},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"This practice ensures the API implementation is secure from external threats. Security testing also includes additional steps such as validation of encryption methodologies, and of the design of the API access control. It also includes user rights management and authorization validation.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"image\\\",\\\"data\\\":{\\\"src\\\":\\\"https://onboarding.epam.com/app/cdn/45aa65b0-76a6-491d-9057-40b6f53d5019/image2019-12-10_16-9-52.png\\\",\\\"imageSize\\\":{\\\"width\\\":747,\\\"height\\\":77}},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"This testing type is related to the actual running of the API â€” particularly with the universal results of utilizing the API codebase. This technique focuses on one of the below aspects: monitoring, execution errors, resource leaks, or error detection.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"image\\\",\\\"data\\\":{\\\"src\\\":\\\"https://onboarding.epam.com/app/cdn/9c13afc2-ed57-46fe-8e6b-8a31dd4b327e/image2019-12-10_16-10-22.png\\\",\\\"imageSize\\\":{\\\"width\\\":747,\\\"height\\\":74}},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"Fuzz testing is another step in the security audit process. In fuzz testing, a vast amount of random data (referred to as \\\\\\\"noise\\\\\\\" or \\\\\\\"fuzz\\\\\\\") will be input into the system to detect any forced crashes or negative behaviors. This technique tests the API's limits to prepare for the \\\\\\\"worst-case scenarios.\\\\\\\"\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\\n\\\\n\\\",\\\"marks\\\":[]}]}]}}\""}