[
  {
    "data": {},
    "type": "uui-richTextEditor-header-3",
    "children": [
      {
        "text": "@epam/uui-test-utils"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "This package contains everything you need to create tests for UUI components. It's built on top of several other packages (such approach is described here: "
      },
      {
        "data": {
          "url": "https://testing-library.com/docs/react-testing-library/setup"
        },
        "type": "link",
        "url": "https://testing-library.com/docs/react-testing-library/setup",
        "children": [
          {
            "text": "https://testing-library.com/docs/react-testing-library/setup"
          }
        ]
      },
      {
        "text": "). So, please prefer using this module instead of direct usage of these packages."
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "@testing-library/react",
                "uui-richTextEditor-span-mark": true,
                "uui-richTextEditor-code": true
              },
              {
                "text": " "
              },
              {
                "text": "all methods of this module are re-exported from",
                "uui-richTextEditor-span-mark": true
              },
              {
                "text": " "
              },
              {
                "text": "@epam/uui-test-utils",
                "uui-richTextEditor-span-mark": true
              },
              {
                "text": ". In addition, it's extended with custom queries (e.g.",
                "uui-richTextEditor-span-mark": true
              },
              {
                "text": " "
              },
              {
                "text": "*ByRoleAndText",
                "uui-richTextEditor-span-mark": true
              },
              {
                "text": "). ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "text": "Some additional methods are built on top of it. "
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "react-test-renderer",
                "uui-richTextEditor-code": true
              },
              {
                "text": " it's re-exported from "
              },
              {
                "text": "@epam/uui-test-utils",
                "uui-richTextEditor-code": true
              },
              {
                "text": " as "
              },
              {
                "text": "renderer",
                "uui-richTextEditor-code": true
              },
              {
                "text": ". Some additional methods are built on top of it. "
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "@testing-library/user-event",
                "uui-richTextEditor-code": true
              },
              {
                "text": "  it's re-exported from "
              },
              {
                "text": "@epam/uui-test-utils",
                "uui-richTextEditor-code": true
              },
              {
                "text": " as "
              },
              {
                "text": "userEvent",
                "uui-richTextEditor-code": true
              },
              {
                "text": ". It's added to this package only for convenience."
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "API provided by this module is described below."
      }
    ]
  },
  {
    "data": {},
    "type": "table",
    "children": [
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_header_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Method"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 0,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_header_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Purpose"
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 0,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_header_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Notes"
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 0,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "renderWithContextAsync"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 1,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "(rendering) Wraps the component with UUI context and renders it to the test environment."
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 1,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  },
                  {
                    "text": " "
                  }
                ]
              },
              {
                "data": {},
                "type": "note-quote",
                "children": [
                  {
                    "text": "describe",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "(",
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "'example suite'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", () => {\n    ",
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "it",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "(",
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "'example test'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", ",
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "async ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "() => {\n        ",
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "await ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "renderWithContextAsync",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "(<",
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "Component ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "/>);\n        ",
                    "uui-richTextEditor-superscript": true,
                    "color": "rgb(0, 0, 0)"
                  },
                  {
                    "text": "// ...\n",
                    "color": "rgb(128, 128, 128)",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "    });\n});",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 1,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "renderHookWithContextAsync"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 2,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "(rendering) Wraps the hook with context and renders it to the test environment. It internally uses \"renderHook\" method of "
                  },
                  {
                    "text": "testing-library/react",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " library."
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 2,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  },
                  {
                    "text": " "
                  }
                ]
              },
              {
                "data": {},
                "type": "note-quote",
                "children": [
                  {
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "text": "describe",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example suite'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", () => {\n    ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "it",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example test'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "async ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "() => {\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "const ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "res ",
                    "color": "rgb(128, 128, 128)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "= ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "await ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "renderHookWithContextAsync",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(useTestHook);\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "// ...\n",
                    "color": "rgb(128, 128, 128)",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "    });\n});",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 2,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "renderSnapshotWithContextAsync"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 3,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "(rendering) Wraps the component with context and renders it as JSON using "
                  },
                  {
                    "text": "react-test-renderer",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": "."
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 3,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  }
                ]
              },
              {
                "data": {},
                "type": "note-quote",
                "children": [
                  {
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "text": "describe",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example suite'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", () => {\n    ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "it",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example test'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "async ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "() => {\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "const ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "tree ",
                    "color": "rgb(69, 131, 131)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "= ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "await ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "renderSnapshotWithContextAsync",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(<",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "Component ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "/>);\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "// ...\n",
                    "color": "rgb(128, 128, 128)",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "        expect",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "tree",
                    "color": "rgb(69, 131, 131)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ").",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "toMatchSnapshot",
                    "color": "rgb(122, 122, 67)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "();\n    });\n});",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 3,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "setupComponentForTest"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 4,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "(rendering) Renders the component to the test environment using "
                  },
                  {
                    "text": "renderWithContextAsync",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": ".\r It simplifies testing of the following scenarios: "
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "1) Wraps the component in UUI context"
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "2) On-change workflow. When a callback prop (e.g. \"onValueChange\") updates some other props (e.g. \"value\").  "
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "3) Updating props without unmounting the component."
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 4,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  }
                ]
              },
              {
                "data": {},
                "type": "note-quote",
                "children": [
                  {
                    "text": "See example on \"Getting Started\" page"
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Notes about parameters:"
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "propsInitializer(context)",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " - a callback which prepares initial properties of the component, it defines all mocks including mocks of on-change methods. The latter should use context.current.setProperty"
                  },
                  {
                    "text": " ",
                    "color": "#7a7a43",
                    "": null,
                    "uui-richTextEditor-span-mark": true
                  },
                  {
                    "text": " method for on-change workflow testing (see the Cookbook for the specific examples)."
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "componentRenderer(props)",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " - a callback which returns React element. "
                  },
                  {
                    "text": "props",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " parameter is an object containing all actual parameters of the component."
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Notes about return value:"
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "result",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " - return value of the "
                  },
                  {
                    "text": "renderWithContextAsync",
                    "uui-richTextEditor-code": true
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "setProps",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " - method which updates props of the component without unmounting it."
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "mocks",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": "  - object containing property names and values which were previously mocked inside of the "
                  },
                  {
                    "text": "propsInitializer",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": ". It internally uses "
                  },
                  {
                    "text": "jest.",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": "isMockFunction",
                    "font-style": null,
                    "": null,
                    "uui-richTextEditor-span-mark": true,
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " in order to determine which properties were mocked.",
                    "font-style": null,
                    "": null,
                    "uui-richTextEditor-span-mark": true
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 4,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "delayAct\r"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 5,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Waits for the given amount milliseconds, the function is wrapped into \"act\". It's needed in exceptional cases only. So, please use it sparingly. If you need to wait for appearance/disappearance, then please use features of "
                  },
                  {
                    "text": "testing-library/react",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " instead (see below). "
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 5,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  },
                  {
                    "text": " "
                  }
                ]
              },
              {
                "data": {},
                "type": "note-quote",
                "children": [
                  {
                    "text": "describe",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example suite'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", () => {\n    ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "it",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example test'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "async ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "() => {\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "await ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "renderWithContextAsync",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(<",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "Component ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "/>);\n       ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "fireEvent",
                    "color": "rgb(102, 14, 122)",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ".",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "click",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "screen",
                    "color": "rgb(102, 14, 122)",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ".",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "getByRole",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'button'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "));\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "await ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "delayAct",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "100",
                    "color": "rgb(0, 0, 255)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ");\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "// ...\n",
                    "color": "rgb(128, 128, 128)",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "    });\n});",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 5,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "delay"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 6,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Waits for the given amount milliseconds. Not wrapped into \"act\" and therefore must not be used for React components testing. Use it in Nodejs testing environment only."
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 6,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  },
                  {
                    "text": "  "
                  }
                ]
              },
              {
                "data": {},
                "type": "note-quote",
                "children": [
                  {
                    "text": "describe",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example suite'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", () => {\n    ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "it",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example test'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "async ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "() => {\n        testFunction();\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "await ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "delay",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "100",
                    "color": "rgb(0, 0, 255)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ");\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "// ...\n",
                    "color": "rgb(128, 128, 128)",
                    "uui-richTextEditor-italic": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "    });\n});",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 6,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "mockReactPortalsForSnapshots\r"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 7,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "It mocks React portals, so that it's possible to do a snapshot testing of components which use Portals internally."
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 7,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  }
                ]
              },
              {
                "type": "note-quote",
                "children": [
                  {
                    "text": "describe",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example suite'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", () => {\n    ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "it",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example test'",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "async ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "() => {\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "const ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "{ ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "mockClear ",
                    "color": "rgb(122, 122, 67)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "} = ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "mockReactPortalsForSnapshots",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "();\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "const ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "tree ",
                    "color": "rgb(69, 131, 131)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "= ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "await ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "renderSnapshotWithContextAsync",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(<",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "Component ",
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-bold": true,
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "/>);\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "mockClear",
                    "color": "rgb(122, 122, 67)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "();\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "expect",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "tree",
                    "color": "rgb(69, 131, 131)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ").",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "toMatchSnapshot",
                    "color": "rgb(122, 122, 67)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "();\n    });\n});",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 7,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "SvgMock"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 8,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Mocks SVG icons. Pass it to component which require SVG icon as an input."
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 8,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  },
                  {
                    "text": " "
                  }
                ]
              },
              {
                "data": {},
                "type": "note-quote",
                "children": [
                  {
                    "uui-richTextEditor-italic": true,
                    "text": "describe",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example suite'",
                    "uui-richTextEditor-bold": true,
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", () => {\n    ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "it",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "'example test'",
                    "uui-richTextEditor-bold": true,
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "async ",
                    "uui-richTextEditor-bold": true,
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "() => {\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "await ",
                    "uui-richTextEditor-bold": true,
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "renderWithContextAsync",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "(<",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "Component ",
                    "uui-richTextEditor-bold": true,
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "uui-richTextEditor-bold": true,
                    "text": "icon",
                    "color": "rgb(0, 0, 255)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "uui-richTextEditor-bold": true,
                    "text": "=",
                    "color": "rgb(0, 128, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "{ ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "SvgMock ",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "}/>);\n        ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "// ...\n",
                    "uui-richTextEditor-italic": true,
                    "color": "rgb(128, 128, 128)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "        });\n});",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 8,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "mockAdaptivePanelLayout"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 9,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Set certain width to all adaptive panels on a page. Use it carefully, because it mocks certain methods of "
                  },
                  {
                    "text": "jsdom",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " which responsible for layout."
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 9,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  },
                  {
                    "text": " "
                  }
                ]
              },
              {
                "data": {},
                "type": "note-quote",
                "children": [
                  {
                    "text": "see usage example here "
                  },
                  {
                    "type": "link",
                    "url": "https://github.com/epam/UUI/blob/main/uui-components/src/adaptivePanel/__tests__/adaptivePanel.test.tsx",
                    "children": [
                      {
                        "text": "https://github.com/epam/UUI/blob/main/uui-components/src/adaptivePanel/__tests__/adaptivePanel.test.tsx"
                      }
                    ]
                  },
                  {
                    "text": ""
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 9,
            "colSpan": 1,
            "rowSpan": 1
          }
        ]
      },
      {
        "data": {},
        "type": "table_row",
        "children": [
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "setupJsDom"
                  }
                ]
              }
            ],
            "colIndex": 0,
            "rowIndex": 10,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Invoke this function in the jest setup in order to mock certain "
                  },
                  {
                    "text": "jsdom",
                    "uui-richTextEditor-code": true
                  },
                  {
                    "text": " properties required for UUI components."
                  }
                ]
              }
            ],
            "colIndex": 1,
            "rowIndex": 10,
            "colSpan": 1,
            "rowSpan": 1
          },
          {
            "type": "table_cell",
            "children": [
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "Example:",
                    "uui-richTextEditor-italic": true
                  }
                ]
              },
              {
                "data": {},
                "type": "note-quote",
                "children": [
                  {
                    "text": "setupJsDom(",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "global",
                    "uui-richTextEditor-bold": true,
                    "color": "rgb(102, 14, 122)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ", { ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "mockCommon3rdPartyDeps",
                    "uui-richTextEditor-bold": true,
                    "color": "rgb(102, 14, 122)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": ": ",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "true ",
                    "uui-richTextEditor-bold": true,
                    "color": "rgb(0, 0, 128)",
                    "uui-richTextEditor-superscript": true
                  },
                  {
                    "text": "});",
                    "color": "rgb(0, 0, 0)",
                    "uui-richTextEditor-superscript": true
                  }
                ]
              },
              {
                "data": {},
                "type": "paragraph",
                "children": [
                  {
                    "text": "It's possible to pass extra options to this method in order to add global mocks for 3rd party dependencies. E.g.:"
                  }
                ]
              }
            ],
            "colIndex": 2,
            "rowIndex": 10,
            "colSpan": 1,
            "rowSpan": 1
          }
        ],
        "size": 100
      }
    ],
    "colSizes": [
      171,
      278,
      479
    ]
  },
  {
    "data": {},
    "type": "uui-richTextEditor-header-3",
    "children": [
      {
        "text": "@testing-library/react"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "All methods of package are already re-exported from "
      },
      {
        "text": "@epam/uui-test-utils",
        "uui-richTextEditor-code": true
      },
      {
        "text": ", so no need to add it to your package.json Below is a list of useful resources related to it:"
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "Cheatsheet:"
              },
              {
                "text": " ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "data": {
                  "url": "https://testing-library.com/docs/react-testing-library/cheatsheet"
                },
                "type": "link",
                "url": "https://testing-library.com/docs/react-testing-library/cheatsheet",
                "children": [
                  {
                    "text": "https://test"
                  },
                  {
                    "data": {
                      "url": "https://testing-library.com/docs/react-testing-library/cheatsheet"
                    },
                    "type": "link",
                    "url": "https://testing-library.com/docs/react-testing-library/cheatsheet",
                    "children": [
                      {
                        "text": "ing-library.com/docs/react-testing-library/cheatsheet"
                      }
                    ]
                  },
                  {
                    "text": ""
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "Queries:"
              },
              {
                "text": " ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "data": {
                  "url": "https://testing-library.com/docs/queries/about"
                },
                "type": "link",
                "url": "https://testing-library.com/docs/queries/about",
                "children": [
                  {
                    "text": "https://testing-library.com/docs/queries/about"
                  }
                ]
              },
              {
                "text": " ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "text": "Please pay attention to the Priority section. And also consider the differences between different types of queries."
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "Sometimes it's useful to review actual page markup rendered to "
              },
              {
                "text": "jsdom",
                "uui-richTextEditor-code": true
              },
              {
                "text": " ",
                "uui-richTextEditor-italic": true
              },
              {
                "text": "via"
              },
              {
                "text": " ",
                "uui-richTextEditor-italic": true
              },
              {
                "text": "screen.logTestingPlaygroundURL()",
                "uui-richTextEditor-code": true
              },
              {
                "text": " ",
                "uui-richTextEditor-italic": true
              },
              {
                "text": "or"
              },
              {
                "text": " ",
                "uui-richTextEditor-italic": true
              },
              {
                "text": "screen.debug()",
                "uui-richTextEditor-code": true
              },
              {
                "text": ".",
                "uui-richTextEditor-italic": true
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "Usage of "
              },
              {
                "text": "userEvent",
                "uui-richTextEditor-code": true
              },
              {
                "text": " vs "
              },
              {
                "text": "fireEvent",
                "uui-richTextEditor-code": true
              },
              {
                "text": ":"
              },
              {
                "text": " ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "data": {
                  "url": "https://testing-library.com/docs/user-event/intro"
                },
                "type": "link",
                "url": "https://testing-library.com/docs/user-event/intro",
                "children": [
                  {
                    "text": "https://testing-library.com/docs/user-event/intro"
                  }
                ]
              },
              {
                "text": " ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "text": " The "
              },
              {
                "text": "userEvent",
                "uui-richTextEditor-code": true
              },
              {
                "text": " simulates full interaction, but it's very slow (up to x10 times slower than "
              },
              {
                "text": "fireEvent",
                "uui-richTextEditor-code": true
              },
              {
                "text": "). On the other hand, the "
              },
              {
                "text": "fireEvent",
                "uui-richTextEditor-code": true
              },
              {
                "text": " is very fast, but it doesn't fully resemble the way how user interacts with real page - which is OK in most cases. We don't push to use one or another. Choose wisely. If you aren't sure then use "
              },
              {
                "text": "fireEvent",
                "uui-richTextEditor-code": true
              },
              {
                "text": " by default, because it's more performant."
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "Usage of \"within\" to limit queries to a specific node:"
              },
              {
                "text": " ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "data": {
                  "url": "https://testing-library.com/docs/dom-testing-library/api-within"
                },
                "type": "link",
                "url": "https://testing-library.com/docs/dom-testing-library/api-within",
                "children": [
                  {
                    "text": "https://testing-library.com/docs/dom-testing-library/api-within"
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "waiting for appearance / disappearance "
              },
              {
                "data": {
                  "url": "https://testing-library.com/docs/guide-disappearance/"
                },
                "type": "link",
                "url": "https://testing-library.com/docs/guide-disappearance/",
                "children": [
                  {
                    "text": "https://testing-library.com/docs/guide-disappearance/"
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "data": {},
    "type": "uui-richTextEditor-header-3",
    "children": [
      {
        "text": "@testing-library/jest-dom"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "This package provides a set of custom jest matchers to check DOM (element text, classes, state, etc.). More info here:"
      },
      {
        "text": " ",
        "uui-richTextEditor-span-mark": true
      },
      {
        "data": {
          "url": "https://github.com/testing-library/jest-dom"
        },
        "type": "link",
        "url": "https://github.com/testing-library/jest-dom",
        "children": [
          {
            "text": ""
          }
        ]
      },
      {
        "text": ""
      },
      {
        "data": {
          "url": "https://github.com/testing-library/jest-dom"
        },
        "type": "link",
        "url": "https://github.com/testing-library/jest-dom",
        "children": [
          {
            "text": ""
          },
          {
            "data": {
              "url": "https://github.com/testing-library/jest-dom"
            },
            "type": "link",
            "url": "https://github.com/testing-library/jest-dom",
            "children": [
              {
                "text": ""
              }
            ]
          },
          {
            "text": ""
          }
        ]
      },
      {
        "text": ""
      },
      {
        "data": {
          "url": "https://github.com/testing-library/jest-dom"
        },
        "type": "link",
        "url": "https://github.com/testing-library/jest-dom",
        "children": [
          {
            "text": ""
          },
          {
            "data": {
              "url": "https://github.com/testing-library/jest-dom"
            },
            "type": "link",
            "url": "https://github.com/testing-library/jest-dom",
            "children": [
              {
                "text": "https://github.com/testing-"
              },
              {
                "data": {
                  "url": "https://testing-library.com/docs/react-testing-library/cheatsheetQueries:"
                },
                "type": "link",
                "url": "https://testing-library.com/docs/react-testing-library/cheatsheetQueries:",
                "children": [
                  {
                    "text": ""
                  },
                  {
                    "data": {
                      "url": "https://github.com/testing-library/jest-dom"
                    },
                    "type": "link",
                    "url": "https://github.com/testing-library/jest-dom",
                    "children": [
                      {
                        "text": "library/jest-dom"
                      }
                    ]
                  },
                  {
                    "text": ""
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          },
          {
            "text": ""
          }
        ]
      },
      {
        "text": ""
      }
    ]
  },
  {
    "data": {},
    "type": "uui-richTextEditor-header-3",
    "children": [
      {
        "text": ""
      },
      {
        "data": {
          "url": "https://github.com/epam/UUI/blob/96bab30480c195b008ef502de2796ebc2e261ad7/uui-build/jest/unit-testing-guide.md#jsdom"
        },
        "type": "link",
        "url": "https://github.com/epam/UUI/blob/96bab30480c195b008ef502de2796ebc2e261ad7/uui-build/jest/unit-testing-guide.md#jsdom",
        "children": [
          {
            "text": ""
          }
        ]
      },
      {
        "text": "jsdom"
      }
    ]
  },
  {
    "data": {},
    "type": "paragraph",
    "children": [
      {
        "text": "It's internally used for testing React components and hooks in UUI, please be aware of its limitations:"
      }
    ]
  },
  {
    "data": {},
    "type": "unordered-list",
    "children": [
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "There is no layout. The elements don't exist in a specific position, layer and size."
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "Usually it's a bad idea to try to mock any layout-related API. It very quickly becomes unmaintainable and fragile. It's better to skip such test or create e2e test instead (if there is such option)."
              }
            ]
          }
        ]
      },
      {
        "data": {},
        "type": "list-item",
        "children": [
          {
            "data": {},
            "type": "list-item-child",
            "children": [
              {
                "text": "More info here:"
              },
              {
                "text": " ",
                "uui-richTextEditor-span-mark": true
              },
              {
                "data": {
                  "url": "https://github.com/jsdom/jsdom#unimplemented-parts-of-the-web-platform"
                },
                "type": "link",
                "url": "https://github.com/jsdom/jsdom#unimplemented-parts-of-the-web-platform",
                "children": [
                  {
                    "text": "https://github.com/jsdom/jsdom#unimplemented-parts-of-the-web-platform"
                  }
                ]
              },
              {
                "text": ""
              }
            ]
          }
        ]
      }
    ]
  }
]