{"content":"\"{\\\"object\\\":\\\"value\\\",\\\"document\\\":{\\\"object\\\":\\\"document\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-2\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11. Data validation & representation\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-3\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.1 Data validation \\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.1.1 All data coming from non-trusted sources must be validated. Validate all the data from files, databases, front-end and back-end services unless trust has been reliably established.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.1.2 Validation mechanisms should be centralised and uniform. Standard and well established implementations of validation functionality should be used. \\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.1.3 All incoming data transmitted from the user, including server- and user-generated input, must be validated. Incoming data requiring validation includes, but is not limited to: data in cookies; data in hidden fields, select lists, check boxes or radio buttons; data entered by a user; emails, news, uploaded files, contact requests and attachments; data in HTTP request headers and any other data in HTTP requests.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.1.4 Validation must be implemented on the server side. Client-side validation may be used only in addition to server-side validation.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.1.5 Where invalid server-generated input is detected, session must be invalidated and the user must be informed that the application has detected invalid input.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.1.6 Data Validation should be implemented by applying the following strategies, in the order specified:\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" Accept known good: Input should be constrained to that which may be acceptable – Type, Length, Range, Format, Syntax\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" Reject known bad: Input that has passed the constraint checks but can be rejected, e.g. if it falls outside the allowed good (whitelist) or is recognised as bad (black list), should be rejected\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" Sanitise: Where potential exists for attack data to pass the preceding steps (e.g. suspect but potentially valid characters such as '), data should be sanitised by means of encoding\\\",\\\"marks\\\":[]}]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.1.7 Prior to validation:\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" Integrity checks should be performed to ensure that the data has not been tampered with\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" Input should be rendered into a canonical form\\\",\\\"marks\\\":[]}]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.1.8 If a user input error occurs, the user must be informed in an appropriate manner why the data submitted cannot be accepted. Exception: failed login attempt – in this case only vague information must be supplied (see 6.1.4).\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-3\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.2 Check uploaded files\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.2.1 The following parameters of uploaded files must be validated:\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"unordered-list\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" File size\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" File name (according to the requirements of Section 11.1)\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" File format (see also 11.3.5) aimed at preventing injection of malicious code)\\\",\\\"marks\\\":[]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"list-item-child\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\" File extension (which must correspond to one of the file formats accepted by the upload functionality)\\\",\\\"marks\\\":[]}]}]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.2.2 Graphic, video and audio files must be trans-coded to eliminate the possibility of malware being present in them.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.2.3 Files should be rendered non-executable once uploaded.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"uui-richTextEditor-header-3\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.3 Data sanitisation\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.3.1 The client and the server must use the same character set, which must be defined explicitly (e.g. the HTML meta-tag Content-Type should be used in web applications; there is no need to consider alternate encoding of meta-characters in this case).\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.3.2 Valid meta-characters in the input should be escaped, and other meta-characters should be removed.\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.3.3 Any character coinciding with a mark-up character must be encoded if included in the output served to the user, e.g. HTML encoding of HTTP responses, where the following characters must be encoded: &, “, ', <, >\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.3.4 Approved and appropriate encoding libraries should be used to encode the output whenever possible (e.g. ESAPI encoding libraries, anti-XSS libraries).\\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"11.3.5 Active code (e.g. SSI or PHP code) should be removed from user input. Execution of such code must be prevented. In this context active code means any code that could be executed or could activate functions on the server side. \\\",\\\"marks\\\":[]}]},{\\\"object\\\":\\\"block\\\",\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{},\\\"nodes\\\":[{\\\"object\\\":\\\"text\\\",\\\"text\\\":\\\"\\\\n\\\\n\\\\n\\\",\\\"marks\\\":[]}]}]}}\""}